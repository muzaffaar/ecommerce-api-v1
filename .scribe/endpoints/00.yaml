name: Authentication
description: |-

  APIs for user authentication
endpoints:
  -
    httpMethods:
      - POST
    uri: api/login
    metadata:
      groupName: Authentication
      groupDescription: |-

        APIs for user authentication
      subgroup: ''
      subgroupDescription: ''
      title: Login
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'The email of the user.'
        required: true
        example: johndoe@example.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      password:
        name: password
        description: 'The password of the user.'
        required: true
        example: secretpassword
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanBodyParameters:
      email: johndoe@example.com
      password: secretpassword
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "token": "1|sometokenstring"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
           "message": "Unauthorized"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/register
    metadata:
      groupName: Authentication
      groupDescription: |-

        APIs for user authentication
      subgroup: ''
      subgroupDescription: ''
      title: Register
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the user.'
        required: true
        example: 'John Doe'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      email:
        name: email
        description: 'The email of the user.'
        required: true
        example: johndoe@example.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      phone:
        name: phone
        description: 'The phone number of the user in international format.'
        required: true
        example: '+36123456789'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      password:
        name: password
        description: 'The password of the user.'
        required: true
        example: secretpassword
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanBodyParameters:
      name: 'John Doe'
      email: johndoe@example.com
      phone: '+36123456789'
      password: secretpassword
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
           "token": "1|sometokenstring"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/email/verify/{id}/{hash}'
    metadata:
      groupName: Authentication
      groupDescription: |-

        APIs for user authentication
      subgroup: ''
      subgroupDescription: ''
      title: 'Verify email'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
      hash:
        name: hash
        description: 'The email verification hash.'
        required: true
        example: e3afed0047b08059d0fada10f400c1e5
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      id: 1
      hash: e3afed0047b08059d0fada10f400c1e5
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "message": "Email verified successfully"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
           "message": "Invalid verification link"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
           "message": "Email already verified"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: |-
          {
           "message": "Unauthorized"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/password/email
    metadata:
      groupName: Authentication
      groupDescription: |-

        APIs for user authentication
      subgroup: ''
      subgroupDescription: ''
      title: 'Send password reset link'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'The email address of the user.'
        required: true
        example: johndoe@example.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanBodyParameters:
      email: johndoe@example.com
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "message": "We have emailed your password reset link!"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
           "message": "We can't find a user with that email address."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/password/reset
    metadata:
      groupName: Authentication
      groupDescription: |-

        APIs for user authentication
      subgroup: ''
      subgroupDescription: ''
      title: 'Reset password'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      token:
        name: token
        description: 'The password reset token.'
        required: true
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      email:
        name: email
        description: 'The email address of the user.'
        required: true
        example: johndoe@example.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      password:
        name: password
        description: 'The new password.'
        required: true
        example: newpassword123
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      password_confirmation:
        name: password_confirmation
        description: 'Confirmation of the new password.'
        required: true
        example: newpassword123
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanBodyParameters:
      token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
      email: johndoe@example.com
      password: newpassword123
      password_confirmation: newpassword123
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "message": "Your password has been reset!"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
           "errors": {
             "email": ["This password reset token is invalid."]
           }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/logout
    metadata:
      groupName: Authentication
      groupDescription: |-

        APIs for user authentication
      subgroup: ''
      subgroupDescription: ''
      title: Logout
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "message": "Logged out"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/phone-verification
    metadata:
      groupName: Authentication
      groupDescription: |-

        APIs for user authentication
      subgroup: ''
      subgroupDescription: ''
      title: 'Send verification code'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "message": "Verification code has been sent, please check your messenger."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
           "message": "Verification code has been sent, please check your messenger."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/phone-verification-resend
    metadata:
      groupName: Authentication
      groupDescription: |-

        APIs for user authentication
      subgroup: ''
      subgroupDescription: ''
      title: 'Resend verification code'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "message": "Verification code sent."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
           "message": "Verification code sent."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/phone-verify
    metadata:
      groupName: Authentication
      groupDescription: |-

        APIs for user authentication
      subgroup: ''
      subgroupDescription: ''
      title: 'Verify code'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      verification_code:
        name: verification_code
        description: 'The 4-digit verification code.'
        required: true
        example: 1234
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanBodyParameters:
      verification_code: 1234
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "message": "Verification successful!"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
           "message": "Invalid verification code. Please try again."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/email/verify
    metadata:
      groupName: Authentication
      groupDescription: |-

        APIs for user authentication
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/email/resend
    metadata:
      groupName: Authentication
      groupDescription: |-

        APIs for user authentication
      subgroup: ''
      subgroupDescription: ''
      title: 'Resend email verification'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "message": "Verification email resent"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
           "message": "Email already verified"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
